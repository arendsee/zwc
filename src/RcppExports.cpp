// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// wc_from_string
Rcpp::DataFrame wc_from_string(int k, std::string text);
RcppExport SEXP _zwc_wc_from_string(SEXP kSEXP, SEXP textSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::string >::type text(textSEXP);
    rcpp_result_gen = Rcpp::wrap(wc_from_string(k, text));
    return rcpp_result_gen;
END_RCPP
}
// wc_from_file
Rcpp::DataFrame wc_from_file(int k, std::string file);
RcppExport SEXP _zwc_wc_from_file(SEXP kSEXP, SEXP fileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    rcpp_result_gen = Rcpp::wrap(wc_from_file(k, file));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_zwc_wc_from_string", (DL_FUNC) &_zwc_wc_from_string, 2},
    {"_zwc_wc_from_file", (DL_FUNC) &_zwc_wc_from_file, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_zwc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
